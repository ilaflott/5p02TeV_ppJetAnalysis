
/////////////// Inclusive jets Binning form Ksenia ////////////////////////////////////////////////////////
double py8Bins_incl[]={
  //0., 1., 5., 6., 8., 10., 12., 15., 18., 21., 24.,   // junk
  //  32., 37., //junk bins above 
  //43., 49., 
  //37.,
  //43., 
  49.,
  56., 
  64., 
  74., 
  84., 
  97., 
  114.,
  133., 
  153., 
  174., 
  196., 
  220., 
  245.,
  272., 
  300.,
  330.,
  362., 
  395., 
  430., 
  468.,
  507., 
  548., 
  592., 
  638., 
  686.//,
  //1000.//,//967.//1032. 
  //1500.
  //  1032., 1101. //junk from here down
}; 
const int n_py8bins_incl=sizeof(py8Bins_incl)/sizeof(double)-1; //this is # of bins = # of entries in array - 1

double py8smearedBins_incl[]={
  //0., 1., 5., 6., 8., 10., 12., 15., 18., 21., 24.,   // junk
  //37.,
  //43.,
  49.,
  56.,
  64., 
  74., 
  84., 
  97., 
  114., 
  133., 
  153., 
  174.,
  196., 
  220., 
  245., 
  272., 
  300., 
  330., 
  362.,
  395., 
  430., 
  468.,
  507.,
  548.,
  592., 
  638., 
  686.//, 
  //  1000.//,
  //1500.//967.//1032.
  //,1500.
  //  1032., 1101. //junk from here down
}; 
const int n_py8smearedbins_incl=sizeof(py8smearedBins_incl)/sizeof(double)-1; //this is # of bins = # of entries in array - 1


double thyBins_incl[]={
  //0., 1., 5., 6., 8., 10., 12., 15., 18., 21., 24.,   // junk
  //  32., 37., //junk bins above 
  //43., 49., 
  //37.,
  43., 
  49.,
  56., 
  64., 
  74., 
  84., 
  97., 
  114.,
  133., 
  153., 
  174., 
  196., 
  220., 
  245.,
  272., 
  300.,
  330.,
  362., 
  395., 
  430., 
  468.,
  507., 
  548., 
  592., 
  638., 
  686.//,
  //1000.//,//967.//1032. 
  //1500.
  //  1032., 1101. //junk from here down
}; 
const int n_thybins_incl=sizeof(thyBins_incl)/sizeof(double)-1; //this is # of bins = # of entries in array - 1

double smearedBins_incl[]={
  //0., 1., 5., 6., 8., 10., 12., 15., 18., 21., 24.,   // junk
  //37.,
  43.,
  49.,
  56.,
  64., 
  74., 
  84., 
  97., 
  114., 
  133., 
  153., 
  174.,
  196., 
  220., 
  245., 
  272., 
  300., 
  330., 
  362.,
  395., 
  430., 
  468.,
  507.,
  548.,
  592., 
  638., 
  686.//, 
  //  1000.//,
  //1500.//967.//1032.
  //,1500.
  //  1032., 1101. //junk from here down
}; 
const int n_smearedbins_incl=sizeof(smearedBins_incl)/sizeof(double)-1; //this is # of bins = # of entries in array - 1

const double absetabins[]={
  0.0,
  0.5,
  1.0,
  1.5,
  2.0,
  2.5,
  3.0//,
  //  3.2,
  //  4.7
};
const int n_absetabins=sizeof(absetabins)/sizeof(double)-1;
const std::string absetabins_str[]={
  "0.0",
  "0.5",
  "1.0",
  "1.5",
  "2.0",
  "2.5",
  "3.0"//,
  //  "3.2",
  //  "4.7"
};
const std::string absetabins_tags[]={
  "00eta05",
  "05eta10",
  "10eta15",
  "15eta20",
  "20eta25",
  "25eta30",
};




std::vector<std::vector<double>> SMP_ptbins{
  {//00eta05
    43.,       49.,       56.,      
    64.,       74.,       84.,       97.,       114.,
    133.,      153.,      174.,      196.,      220.,      245.,
    272.,      300.,      330.,      362.,      395.,      430.,
    468.,      507.,      548.,      592.,      638.,      686.,
      737.,      790.,      846.,      905.,      967.,      1032.},//, 1101.}, 
  {//05eta10
    43.,       49.,       56.,      
    64.,       74.,       84.,       97.,       114.,
    133.,      153.,      174.,      196.,      220.,      245.,
    272.,      300.,      330.,      362.,      395.,      430.,
    468.,      507.,      548.,      592.,      638.,      686.,  
    737.,      790.,      846.,      905.,      967.,      1032.}, 
  {//10eta15
    43.,       49.,       56.,      
    64.,       74.,       84.,       97.,       114.,
    133.,      153.,      174.,      196.,      220.,      245.,
    272.,      300.,      330.,      362.,      395.,      430.,
    468.,      507.,      548.,      592.,      638.,      686.,  
      737.},//,      790.}, 
  {//15eta20
    43.,       49.,       56.,      
    64.,       74.,       84.,       97.,       114.,
    133.,      153.,      174.,      196.,      220.,      245.,
    272.,      300.,      330.,      362.,      395.,      430.,
    468.,      507.,      548.,      592.,      638.,      686.}
  //737.,      790.}//,
  //  {//20eta25
  //    43.,       49.,       56.,      
  //    64.,       74.,       84.,       97.,       114.,
  //    133.,      153.,      174.,      196.,      220.,      245.,
  //    272.,      300.,      330.,      362.,      395.,      430.,
  //    468.,      507.,      548.,      592.,      638.,      686.}
  
  
};







//use these to smear with hists for cross check of how tails might affect the smearing
std::vector<std::vector<double>> JER_ptbins{



  {
43.,
49.,
56.,
64.,
74.,
84.,
97.,
114.,
133.,
153.,
174.,
196.,
220.,
245.,
272.,
300.,
330.,
362.,
395.,
430.,
468.,
507.,
548.,
592.,
638.,
686.,
737.,
790.,
846.,
905.,
967.,
1032.,
1101.
  },

  {
43.,
49.,
56.,
64.,
74.,
84.,
97.,
114.,
133.,
153.,
174.,
196.,
220.,
245.,
272.,
300.,
330.,
362.,
395.,
430.,
468.,
507.,
548.,
592.,
638.,
686.,
737.,
790.,
846.,
905.,
967.,
1032.
  },

  {
43.,
49.,
56.,
64.,
74.,
84.,
97.,
114.,
133.,
153.,
174.,
196.,
220.,
245.,
272.,
300.,
330.,
362.,
395.,
430.,
468.,
507.,
548.,
592.,
638.,
686.,
737.,
790.
  },

  {
43.,
49.,
56.,
64.,
74.,
84.,
97.,
114.,
133.,
153.,
174.,
196.,
220.,
245.,
272.,
300.,
330.,
362.,
395.,
430.,
468.,
507.,
548.,
592.,
638.,
686.
  }

};





