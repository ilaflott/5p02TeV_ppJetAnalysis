//format is:
//{bin1etalo,bin1etahi,bin1philo,bin1phihi},
//{bin2etalo,bin2etahi,bin2philo,bin2phihi},
//{bin3etalo,bin3etahi,bin3philo,bin3phihi},



std::vector<std::vector<double>> hotspots={
  {-3.66400, -3.48900,  -3.05433, -2.96706 },
  {-3.66400, -3.48900,  -2.35619, -2.26893 },
  {-3.66400, -3.48900,   2.53073,  2.61799 },
  {-3.48900, -3.31400,   1.91986,  2.00713 },
  {-3.48900, -3.31400,   3.05433,  3.14159 },
  {-2.65000, -2.50000,   1.91986,  2.00713 },
  {-2.50000, -2.32200,  -1.04720, -0.95993 },
  {-1.83000, -1.74000,   3.05433,  3.14159 },
  {-0.87000, -0.78300,   0.43633,  0.52360 },
  {-0.78300, -0.69600,   0.43633,  0.52360 },
  {-0.69600, -0.60900,   0.34907,  0.43633 },
  {-0.69600, -0.60900,   0.43633,  0.52360 },
  {-0.60900, -0.52200,   0.34907,  0.43633 },
  {-0.60900, -0.52200,   0.43633,  0.52360 },
  {-0.52200, -0.43500,   0.43633,  0.52360 },
  {-0.52200, -0.43500,   0.52360,  0.61087 },
  {-0.43500, -0.34800,   0.43633,  0.52360 },
  {-0.43500, -0.34800,   0.52360,  0.61087 },
  {-0.34800, -0.26100,   0.43633,  0.52360 },
  {-0.26100, -0.17400,   0.43633,  0.52360 },
  {-0.17400, -0.08700,   0.43633,  0.52360 },
  {-0.08700,  0.00000,  -1.65806, -1.57080 },
  {-0.08700,  0.00000,   0.43633,  0.52360 },
  { 0.00000,  0.08700,   0.43633,  0.52360 },
  { 0.17400,  0.26100,  -2.44346, -2.35619 },
  { 0.17400,  0.26100,  -2.35619, -2.26893 },
  { 0.26100,  0.34800,  -2.44346, -2.35619 },
  { 0.26100,  0.34800,  -2.35619, -2.26893 },
  { 0.34800,  0.43500,  -2.35619, -2.26893 },
  { 0.43500,  0.52200,  -2.44346, -2.35619 },
  { 0.43500,  0.52200,  -2.35619, -2.26893 },
  { 0.52200,  0.60900,  -2.44346, -2.35619 },
  { 0.52200,  0.60900,  -2.35619, -2.26893 },
  { 0.60900,  0.69600,  -2.44346, -2.35619 },
  { 0.60900,  0.69600,  -2.35619, -2.26893 },
  { 0.69600,  0.78300,  -2.44346, -2.35619 },
  { 0.69600,  0.78300,  -2.35619, -2.26893 },
  { 0.78300,  0.87000,  -2.44346, -2.35619 },
  { 0.78300,  0.87000,  -2.35619, -2.26893 },
  { 0.87000,  0.95700,  -2.44346, -2.35619 },
  { 0.87000,  0.95700,  -2.35619, -2.26893 },
  { 0.95700,  1.04400,  -2.44346, -2.35619 },
  { 0.95700,  1.04400,  -2.35619, -2.26893 },
  { 1.04400,  1.13100,  -2.44346, -2.35619 },
  { 1.04400,  1.13100,  -2.35619, -2.26893 },
  { 1.13100,  1.21800,  -2.35619, -2.26893 },
  { 1.21800,  1.30500,  -2.35619, -2.26893 },
  { 2.04300,  2.17200,  -1.65806, -1.57080 },
  { 2.04300,  2.17200,  -1.57080, -1.48353 },
  { 2.32200,  2.50000,  -1.48353, -1.39626 },
  { 2.50000,  2.65000,  -0.52360, -0.43633 },
  { 2.50000,  2.65000,  -0.34907, -0.26180 },
  { 2.85300,  2.96400,   0.69813,  0.78540 },
  { 2.85300,  2.96400,   2.44346,  2.53073 },
  { 2.96400,  3.13900,   1.04720,  1.13446 },
  { 2.96400,  3.13900,   1.13446,  1.22173 },
  { 2.96400,  3.13900,   1.22173,  1.30900 },
  { 2.96400,  3.13900,   1.39626,  1.48353 },
  { 3.31400,  3.48900,   0.61087,  0.69813 },
  { 3.48900,  3.66400,   2.61799,  2.70526 }
};





bool isinhotspot(float jteta, float jtphi){
  bool ishotspot=false;
  bool debug=false;
  int Nhotspots=hotspots.size();
  if(Nhotspots<=0)assert(false);
  //std::cout<<"Nhotspots="<<Nhotspots<<std::endl;
  int hotspot_i=-1;
  for(int i=0; i<Nhotspots; i++){
    if(   (jteta> hotspots[i].at(0) ) &&
	  (jteta<=hotspots[i].at(1) ) &&
	  (jtphi> hotspots[i].at(2) ) &&
	  (jtphi<=hotspots[i].at(3) )	  ){      
      hotspot_i=i;
      ishotspot=true;      
      break;
    }
    else{ 
      ishotspot=false;
      continue;
    }
  }  
  if(debug){
    if(ishotspot){
      std::cout<<"jet ("<<jteta<<", "<<jtphi<<") is in hotspot #"<<hotspot_i<<std::endl;
      std::cout
	<<"{"<<hotspots[hotspot_i].at(0)  <<", "
	<<hotspots[hotspot_i].at(1) <<", "
	<<hotspots[hotspot_i].at(2) <<", "
	<<hotspots[hotspot_i].at(3) <<"} "<<std::endl;
    }
    //else{
    //  std::cout<<"jet ("<<jteta<<", "<<jtphi<<") is not in a hotspot "<<std::endl;
    //}
  }
  return ishotspot;
}


































const double etasegments[]={
-5.191,
-4.889,
-4.716,
-4.538,
-4.363,
-4.191,
-4.013,
-3.839,
-3.664,
-3.489,
-3.314,
-3.139,
-2.964,
-2.853,
-2.650,
-2.500,
-2.322,
-2.172,
-2.043,
-1.930,
-1.830,
-1.740,
-1.653,
-1.566,
-1.479,
-1.392,
-1.305,
-1.218,
-1.131,
-1.044,
-0.957,
-0.870,
-0.783,
-0.696,
-0.609,
-0.522,
-0.435,
-0.348,
-0.261,
-0.174,
-0.087,
 0.000,
 0.087,
 0.174,
 0.261,
 0.348,
 0.435,
 0.522,
 0.609,
 0.696,
 0.783,
 0.870,
 0.957,
 1.044,
 1.131,
 1.218,
 1.305,
 1.392,
 1.479,
 1.566,
 1.653,
 1.740,
 1.830,
 1.930,
 2.043,
 2.172,
 2.322,
 2.500,
 2.650,
 2.853,
 2.964,
 3.139,
 3.314,
 3.489,
 3.664,
 3.839,
 4.013,
 4.191,
 4.363,
 4.538,
 4.716,
 4.889,
 5.191
};
const int Netasegments=sizeof(etasegments)/sizeof(double)-1;
